Within the New Copernicus Capability for Trophic Ocean Networks (NECCTON) project,
 we aim to improve the current data assimilation system by developing a method for accurately
 estimating marine optical constituents from satellite derived Remote Sensing Reflectance.

 In the next modules, we present a functional version of the codes used for the project.
 The complete code can be found in https://github.com/carlossoto362/OGS_one_d_model, and 
 an example in colab in https://colab.research.google.com/drive/1ROAXHcGPcubT5lr_1n1row_cYhTk8Qd-?usp=sharing.
 and https://colab.research.google.com/drive/1wJwG-DsJ63Qy3z-jyIuX3tcyKxfrGlwd?usp=sharing

 The modules in PySurfaceData containe all the scripts used for the present work. 
 Jacobians contained the derivatives of the functions bbp, kd and RRS with respect of the parameters "perturbation_factors" for all the storical data available. 
 VAE_model containes the state_dict of the NN models, the final used was model_second_part_chla_centered.pt, which uses model_first_part.pt. 
 mcmc has all the runs for the mcmc algorithm. 
 npy_data has the historical data. 
 plot_data has plots and some output data used to create plots. 
 All the folders starting with result_*,  have the output for different runds, using bayes, or using a neural network. The results of the NN used are actually in VAE_model/results_VAE_VAEparam_chla
	while the bayes results that were used at the end are results_bayes_lognormal_unperturbed, results_bayes_lognormal_VAEparam, results_bayes_lognormal_mcmcParam
 ModelAvailability.ipynb has the the colab with an example of how to load the data, how to run the bayes optimization, and how to plot the results. 
 cst.csv and cte_lambda.csv have the parameters from the literature. 
 requirements have the python3.9 libraries required, except from the pytorch releted ones and the networkx. 
 

##########################################################################################
The make file has being tested only in a computer with Ubuntu 20.04.6 LTS bulsay, with
python3 and pip3 installed. It creates a virtual environment for python3, and a variable
for the home page. If make doesn't work, the python3 libraries for which the
codes have been tested are in requirements.txt. Also, you need to add the PySurfaceData to the
python path, one option would be running $python3 -c 'import sys; sys.path.insert(1, "./PySurfaceData")'.
Finally, some modules require the home path added as a local variable, for example, run
"export OGS_ONE_D_HOME_PATH=$(PWD)".
